module  {
  func @fastwavesuv(%arg0: !stencil.field<?x?x?xf64>, %arg1: !stencil.field<?x?x?xf64>, %arg2: !stencil.field<?x?x?xf64>, %arg3: !stencil.field<?x?x?xf64>, %arg4: !stencil.field<?x?x?xf64>, %arg5: !stencil.field<?x?x?xf64>, %arg6: !stencil.field<?x?x?xf64>, %arg7: !stencil.field<?x?x?xf64>, %arg8: !stencil.field<?x?x?xf64>, %arg9: !stencil.field<?x?x?xf64>, %arg10: !stencil.field<0x?x0xf64>) attributes {stencil.program} {
    %0 = stencil.cast %arg0([-4, -4, -4] : [508, 508, 508]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<512x512x512xf64>
    %1 = stencil.cast %arg1([-4, -4, -4] : [508, 508, 508]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<512x512x512xf64>
    %2 = stencil.cast %arg2([-4, -4, -4] : [508, 508, 508]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<512x512x512xf64>
    %3 = stencil.cast %arg3([-4, -4, -4] : [508, 508, 508]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<512x512x512xf64>
    %4 = stencil.cast %arg4([-4, -4, -4] : [508, 508, 508]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<512x512x512xf64>
    %5 = stencil.cast %arg5([-4, -4, -4] : [508, 508, 508]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<512x512x512xf64>
    %6 = stencil.cast %arg6([-4, -4, -4] : [508, 508, 508]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<512x512x512xf64>
    %7 = stencil.cast %arg7([-4, -4, -4] : [508, 508, 508]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<512x512x512xf64>
    %8 = stencil.cast %arg8([-4, -4, -4] : [508, 508, 508]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<512x512x512xf64>
    %9 = stencil.cast %arg9([-4, -4, -4] : [508, 508, 508]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<512x512x512xf64>
    %10 = stencil.cast %arg10([-4, -4, -4] : [508, 508, 508]) : (!stencil.field<0x?x0xf64>) -> !stencil.field<0x512x0xf64>
    %11 = stencil.load %0 : (!stencil.field<512x512x512xf64>) -> !stencil.temp<?x?x?xf64>
    %12 = stencil.load %1 : (!stencil.field<512x512x512xf64>) -> !stencil.temp<?x?x?xf64>
    %13 = stencil.load %2 : (!stencil.field<512x512x512xf64>) -> !stencil.temp<?x?x?xf64>
    %14 = stencil.load %3 : (!stencil.field<512x512x512xf64>) -> !stencil.temp<?x?x?xf64>
    %15 = stencil.load %4 : (!stencil.field<512x512x512xf64>) -> !stencil.temp<?x?x?xf64>
    %16 = stencil.load %5 : (!stencil.field<512x512x512xf64>) -> !stencil.temp<?x?x?xf64>
    %17 = stencil.load %6 : (!stencil.field<512x512x512xf64>) -> !stencil.temp<?x?x?xf64>
    %18 = stencil.load %7 : (!stencil.field<512x512x512xf64>) -> !stencil.temp<?x?x?xf64>
    %19 = stencil.load %10 : (!stencil.field<0x512x0xf64>) -> !stencil.temp<0x?x0xf64>
    %20:2 = stencil.apply (%arg11 = %15 : !stencil.temp<?x?x?xf64>, %arg12 = %16 : !stencil.temp<?x?x?xf64>, %arg13 = %17 : !stencil.temp<?x?x?xf64>, %arg14 = %13 : !stencil.temp<?x?x?xf64>, %arg15 = %14 : !stencil.temp<?x?x?xf64>, %arg16 = %18 : !stencil.temp<?x?x?xf64>, %arg17 = %11 : !stencil.temp<?x?x?xf64>, %arg18 = %12 : !stencil.temp<?x?x?xf64>, %arg19 = %19 : !stencil.temp<0x?x0xf64>) -> (!stencil.temp<?x?x?xf64>, !stencil.temp<?x?x?xf64>) {
      %cst = constant 2.000000e+00 : f64
      %cst_0 = constant 1.000000e+01 : f64
      %cst_1 = constant 9.765625E-4 : f64
      %cst_2 = constant 5.000000e-01 : f64
      %cst_3 = constant 1.000000e+00 : f64
      %21 = stencil.access %arg11 [0, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
      %22 = stencil.access %arg12 [0, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
      %23 = mulf %21, %22 : f64
      %24 = subf %cst_3, %21 : f64
      %25 = stencil.access %arg12 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %26 = mulf %25, %24 : f64
      %27 = addf %23, %26 : f64
      %28 = stencil.access %arg11 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %29 = mulf %28, %25 : f64
      %30 = subf %cst_3, %28 : f64
      %31 = stencil.access %arg12 [0, 0, -1] : (!stencil.temp<?x?x?xf64>) -> f64
      %32 = mulf %31, %30 : f64
      %33 = addf %29, %32 : f64
      %34 = subf %27, %33 : f64
      %35 = stencil.access %arg12 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %36 = subf %35, %25 : f64
      %37 = stencil.access %arg11 [1, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
      %38 = stencil.access %arg12 [1, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
      %39 = mulf %37, %38 : f64
      %40 = subf %cst_3, %37 : f64
      %41 = mulf %35, %40 : f64
      %42 = addf %39, %41 : f64
      %43 = stencil.access %arg11 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %44 = mulf %43, %35 : f64
      %45 = subf %cst_3, %43 : f64
      %46 = stencil.access %arg12 [1, 0, -1] : (!stencil.temp<?x?x?xf64>) -> f64
      %47 = mulf %46, %45 : f64
      %48 = addf %44, %47 : f64
      %49 = subf %42, %48 : f64
      %50 = addf %49, %34 : f64
      %51 = mulf %cst_2, %50 : f64
      %52 = stencil.access %arg13 [0, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
      %53 = stencil.access %arg13 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %54 = stencil.access %arg13 [1, 0, 1] : (!stencil.temp<?x?x?xf64>) -> f64
      %55 = stencil.access %arg13 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %56 = addf %52, %53 : f64
      %57 = addf %54, %55 : f64
      %58 = subf %56, %57 : f64
      %59 = subf %52, %53 : f64
      %60 = subf %54, %55 : f64
      %61 = addf %59, %60 : f64
      %62 = divf %58, %61 : f64
      %63 = mulf %51, %62 : f64
      %64 = addf %36, %63 : f64
      %65 = stencil.access %arg16 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %66 = stencil.access %arg16 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %67 = stencil.access %arg19 [0, 0, 0] : (!stencil.temp<0x?x0xf64>) -> f64
      %68 = addf %65, %66 : f64
      %69 = mulf %cst, %67 : f64
      %70 = divf %69, %68 : f64
      %71 = mulf %64, %70 : f64
      %72 = stencil.access %arg18 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %73 = subf %72, %71 : f64
      %74 = mulf %cst_0, %73 : f64
      %75 = stencil.access %arg17 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %76 = addf %74, %75 : f64
      %77 = stencil.store_result %76 : (f64) -> !stencil.result<f64>
      %78 = stencil.access %arg12 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %79 = subf %78, %25 : f64
      %80 = stencil.access %arg11 [0, 1, 1] : (!stencil.temp<?x?x?xf64>) -> f64
      %81 = stencil.access %arg12 [0, 1, 1] : (!stencil.temp<?x?x?xf64>) -> f64
      %82 = mulf %80, %81 : f64
      %83 = subf %cst_3, %80 : f64
      %84 = mulf %78, %83 : f64
      %85 = addf %82, %84 : f64
      %86 = stencil.access %arg11 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %87 = mulf %86, %78 : f64
      %88 = subf %cst_3, %86 : f64
      %89 = stencil.access %arg12 [0, 1, -1] : (!stencil.temp<?x?x?xf64>) -> f64
      %90 = mulf %89, %88 : f64
      %91 = addf %87, %90 : f64
      %92 = subf %85, %91 : f64
      %93 = addf %92, %34 : f64
      %94 = mulf %cst_2, %93 : f64
      %95 = stencil.access %arg13 [0, 1, 1] : (!stencil.temp<?x?x?xf64>) -> f64
      %96 = stencil.access %arg13 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %97 = addf %95, %96 : f64
      %98 = subf %56, %97 : f64
      %99 = subf %95, %96 : f64
      %100 = addf %59, %99 : f64
      %101 = divf %98, %100 : f64
      %102 = mulf %94, %101 : f64
      %103 = addf %79, %102 : f64
      %104 = stencil.access %arg16 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %105 = addf %104, %66 : f64
      %106 = divf %cst_1, %105 : f64
      %107 = mulf %103, %106 : f64
      %108 = stencil.access %arg15 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %109 = subf %108, %107 : f64
      %110 = mulf %cst_0, %109 : f64
      %111 = stencil.access %arg14 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %112 = addf %110, %111 : f64
      %113 = stencil.store_result %112 : (f64) -> !stencil.result<f64>
      stencil.return %77, %113 : !stencil.result<f64>, !stencil.result<f64>
    }
    stencil.store %20#0 to %8([0, 0, 0] : [504, 504, 504]) : !stencil.temp<?x?x?xf64> to !stencil.field<512x512x512xf64>
    stencil.store %20#1 to %9([0, 0, 0] : [504, 504, 504]) : !stencil.temp<?x?x?xf64> to !stencil.field<512x512x512xf64>
    return
  }
}

