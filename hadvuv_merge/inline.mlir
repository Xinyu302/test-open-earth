module  {
  func @hadvuv(%arg0: !stencil.field<?x?x?xf64>, %arg1: !stencil.field<?x?x?xf64>, %arg2: !stencil.field<?x?x?xf64>, %arg3: !stencil.field<?x?x?xf64>, %arg4: !stencil.field<0x?x0xf64>, %arg5: !stencil.field<0x?x0xf64>, %arg6: !stencil.field<0x?x0xf64>, %arg7: !stencil.field<0x?x0xf64>) attributes {stencil.program} {
    %0 = stencil.cast %arg0([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %1 = stencil.cast %arg1([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %2 = stencil.cast %arg2([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %3 = stencil.cast %arg3([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<?x?x?xf64>) -> !stencil.field<72x72x72xf64>
    %4 = stencil.cast %arg4([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<0x?x0xf64>) -> !stencil.field<0x72x0xf64>
    %5 = stencil.cast %arg5([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<0x?x0xf64>) -> !stencil.field<0x72x0xf64>
    %6 = stencil.cast %arg6([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<0x?x0xf64>) -> !stencil.field<0x72x0xf64>
    %7 = stencil.cast %arg7([-4, -4, -4] : [68, 68, 68]) : (!stencil.field<0x?x0xf64>) -> !stencil.field<0x72x0xf64>
    %8 = stencil.load %0 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %9 = stencil.load %1 : (!stencil.field<72x72x72xf64>) -> !stencil.temp<?x?x?xf64>
    %10 = stencil.load %4 : (!stencil.field<0x72x0xf64>) -> !stencil.temp<0x?x0xf64>
    %11 = stencil.load %5 : (!stencil.field<0x72x0xf64>) -> !stencil.temp<0x?x0xf64>
    %12 = stencil.load %6 : (!stencil.field<0x72x0xf64>) -> !stencil.temp<0x?x0xf64>
    %13 = stencil.load %7 : (!stencil.field<0x72x0xf64>) -> !stencil.temp<0x?x0xf64>
    %14:2 = stencil.apply (%arg8 = %8 : !stencil.temp<?x?x?xf64>, %arg9 = %10 : !stencil.temp<0x?x0xf64>, %arg10 = %9 : !stencil.temp<?x?x?xf64>, %arg11 = %11 : !stencil.temp<0x?x0xf64>, %arg12 = %13 : !stencil.temp<0x?x0xf64>, %arg13 = %12 : !stencil.temp<0x?x0xf64>) -> (!stencil.temp<?x?x?xf64>, !stencil.temp<?x?x?xf64>) {
      %cst = constant 4.8828125E-4 : f64
      %cst_0 = constant 7.32421875E-4 : f64
      %cst_1 = constant 0.000000e+00 : f64
      %cst_2 = constant -0.16666666666666666 : f64
      %cst_3 = constant -5.000000e-01 : f64
      %cst_4 = constant -0.33333333333333331 : f64
      %cst_5 = constant 1.5695558894524118E-7 : f64
      %cst_6 = constant 2.500000e-01 : f64
      %cst_7 = constant 0.33333333333333331 : f64
      %15 = stencil.access %arg8 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %16 = stencil.access %arg8 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %17 = stencil.access %arg8 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %18 = addf %15, %16 : f64
      %19 = addf %18, %17 : f64
      %20 = mulf %19, %cst_7 : f64
      %21 = stencil.access %arg9 [0, 0, 0] : (!stencil.temp<0x?x0xf64>) -> f64
      %22 = mulf %20, %21 : f64
      %23 = cmpf ogt, %22, %cst_1 : f64
      %24 = mulf %cst_3, %16 : f64
      %25 = stencil.access %arg8 [-2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %26 = addf %24, %15 : f64
      %27 = mulf %cst_4, %17 : f64
      %28 = mulf %cst_2, %25 : f64
      %29 = addf %27, %28 : f64
      %30 = addf %26, %29 : f64
      %31 = mulf %30, %22 : f64
      %32 = stencil.access %arg8 [2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %33 = mulf %cst_4, %15 : f64
      %34 = addf %24, %17 : f64
      %35 = mulf %cst_2, %32 : f64
      %36 = addf %33, %35 : f64
      %37 = addf %34, %36 : f64
      %38 = negf %22 : f64
      %39 = mulf %38, %37 : f64
      %40 = select %23, %31, %39 : f64
      %41 = stencil.access %arg10 [0, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %42 = stencil.access %arg10 [0, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %43 = stencil.access %arg10 [1, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %44 = stencil.access %arg10 [1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %45 = addf %41, %42 : f64
      %46 = addf %43, %44 : f64
      %47 = addf %45, %46 : f64
      %48 = mulf %47, %cst_6 : f64
      %49 = mulf %48, %cst_5 : f64
      %50 = stencil.access %arg8 [0, -1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %51 = stencil.access %arg8 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %52 = cmpf ogt, %49, %cst_1 : f64
      %53 = stencil.access %arg8 [0, -2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %54 = addf %24, %50 : f64
      %55 = mulf %cst_4, %51 : f64
      %56 = mulf %cst_2, %53 : f64
      %57 = addf %55, %56 : f64
      %58 = addf %54, %57 : f64
      %59 = mulf %58, %49 : f64
      %60 = stencil.access %arg8 [0, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %61 = mulf %cst_4, %50 : f64
      %62 = addf %24, %51 : f64
      %63 = mulf %cst_2, %60 : f64
      %64 = addf %61, %63 : f64
      %65 = addf %62, %64 : f64
      %66 = negf %49 : f64
      %67 = mulf %66, %65 : f64
      %68 = select %52, %59, %67 : f64
      %69 = mulf %40, %cst : f64
      %70 = mulf %68, %cst_0 : f64
      %71 = addf %69, %70 : f64
      %72 = stencil.access %arg13 [0, 0, 0] : (!stencil.temp<0x?x0xf64>) -> f64
      %73 = mulf %22, %48 : f64
      %74 = mulf %73, %72 : f64
      %75 = addf %74, %71 : f64
      %76 = stencil.store_result %75 : (f64) -> !stencil.result<f64>
      %77 = stencil.access %arg8 [-1, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %78 = addf %15, %77 : f64
      %79 = addf %16, %51 : f64
      %80 = addf %78, %79 : f64
      %81 = mulf %80, %cst_6 : f64
      %82 = stencil.access %arg12 [0, 0, 0] : (!stencil.temp<0x?x0xf64>) -> f64
      %83 = stencil.access %arg11 [0, 0, 0] : (!stencil.temp<0x?x0xf64>) -> f64
      %84 = mulf %81, %83 : f64
      %85 = stencil.access %arg10 [-1, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %86 = cmpf ogt, %84, %cst_1 : f64
      %87 = mulf %cst_3, %42 : f64
      %88 = stencil.access %arg10 [-2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %89 = addf %87, %85 : f64
      %90 = mulf %cst_4, %44 : f64
      %91 = mulf %cst_2, %88 : f64
      %92 = addf %90, %91 : f64
      %93 = addf %89, %92 : f64
      %94 = mulf %93, %84 : f64
      %95 = stencil.access %arg10 [2, 0, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %96 = mulf %cst_4, %85 : f64
      %97 = addf %87, %44 : f64
      %98 = mulf %cst_2, %95 : f64
      %99 = addf %96, %98 : f64
      %100 = addf %97, %99 : f64
      %101 = negf %84 : f64
      %102 = mulf %101, %100 : f64
      %103 = select %86, %94, %102 : f64
      %104 = stencil.access %arg10 [0, 1, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %105 = addf %45, %104 : f64
      %106 = mulf %105, %cst_7 : f64
      %107 = mulf %106, %cst_5 : f64
      %108 = cmpf ogt, %107, %cst_1 : f64
      %109 = stencil.access %arg10 [0, -2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %110 = addf %87, %41 : f64
      %111 = mulf %cst_4, %104 : f64
      %112 = mulf %cst_2, %109 : f64
      %113 = addf %111, %112 : f64
      %114 = addf %110, %113 : f64
      %115 = mulf %114, %107 : f64
      %116 = stencil.access %arg10 [0, 2, 0] : (!stencil.temp<?x?x?xf64>) -> f64
      %117 = mulf %cst_4, %41 : f64
      %118 = addf %87, %104 : f64
      %119 = mulf %cst_2, %116 : f64
      %120 = addf %117, %119 : f64
      %121 = addf %118, %120 : f64
      %122 = negf %107 : f64
      %123 = mulf %122, %121 : f64
      %124 = select %108, %115, %123 : f64
      %125 = mulf %103, %cst : f64
      %126 = mulf %124, %cst_0 : f64
      %127 = addf %125, %126 : f64
      %128 = mulf %81, %81 : f64
      %129 = mulf %128, %82 : f64
      %130 = subf %127, %129 : f64
      %131 = stencil.store_result %130 : (f64) -> !stencil.result<f64>
      stencil.return %76, %131 : !stencil.result<f64>, !stencil.result<f64>
    }
    stencil.store %14#0 to %2([0, 0, 0] : [64, 64, 64]) : !stencil.temp<?x?x?xf64> to !stencil.field<72x72x72xf64>
    stencil.store %14#1 to %3([0, 0, 0] : [64, 64, 64]) : !stencil.temp<?x?x?xf64> to !stencil.field<72x72x72xf64>
    return
  }
}

