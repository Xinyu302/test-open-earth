; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

%0 = type { double*, double*, i32, i32, i32, i32, i32, i32, i32, double*, double*, i32, i32, i32, i32, i32, i32, i32 }

@laplace_kernel_laplace_kernel_kernel_name = internal constant [15 x i8] c"laplace_kernel\00"
@laplace_kernel_gpubin_cst = internal constant [3456 x i8] c"\7FELF\02\01\013\07\00\00\00\00\00\00\00\02\00\BE\00u\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\0A\00\00\00\00\00\00F\05#\00@\00\00\00\00\00@\00\0C\00\01\00\00.shstrtab\00.strtab\00.symtab\00.symtab_shndx\00.nv.info\00.text.laplace_kernel\00.nv.info.laplace_kernel\00.nv.shared.laplace_kernel\00.nv.constant0.laplace_kernel\00.rel.nv.constant0.laplace_kernel\00.debug_frame\00.rel.debug_frame\00.rela.debug_frame\00.nv.callgraph\00.nv.prototype\00.nv.rel.action\00\00.shstrtab\00.strtab\00.symtab\00.symtab_shndx\00.nv.info\00laplace_kernel\00.text.laplace_kernel\00.nv.info.laplace_kernel\00.nv.shared.laplace_kernel\00.rel.nv.constant0.laplace_kernel\00.nv.constant0.laplace_kernel\00_param\00.debug_frame\00.rel.debug_frame\00.rela.debug_frame\00.nv.callgraph\00.nv.prototype\00.nv.rel.action|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\00\00\00\00\FF\FF\FF\FF0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00p`\01\\\00\047\04\00uz\01\00\00\0A\00\00\00\0F\00\00\00\C4\0F\00\89\F3\FF\FF\FF\00\00\00\FF\00\0E\00\00\E2\0F\00\19y\00\00\00\00\00\00\00%\00\00\00\22\0E\00\02x\02\00@\14\00\00\00\0F\00\00\00\C6\0F\00\19y\03\00\00\00\00\00\00&\00\00\00h\0E\00\19y\07\00\00\00\00\00\00!\00\00\00\A2\0E\00\10x\00\00\01\00\00\00\FF\E0\FF\07\00\E2\1F\00$t\03\03\DBQ\00\00\02\02\8E\07\00\C8/\00$x\02\00H\00\00\00\03\02\8E\07\00\E2\0F\00\10x\05\07\01\00\00\00\FF\E0\FF\07\00\E4O\00\02x\00\00\08\00\00\00\00\0F\00\00\00\E4\0F\00\10r\03\02\07\00\00\00\FF\E0\FF\07\00\E4\0F\04\10x\0B\05\B8\FF\FF\FF\02\E0\FF\07\00\E4\0F\00\10x\07\03\02\00\00\00\FF\E0\FF\07\00\E4\0F\04\10x\09\03I\00\00\00\FF\E0\FF\07\00\E2\0F\00%v\0A\0B\00Z\00\00\00\02\8E\07\00\E2\0F\00\10r\0D\02\05\00\00\00\FF\E0\FF\07\00\C6\0F\00%v\04\03\00Z\00\00\00\02\8E\07\00\C8\0F\00%v\06\07\00Z\00\00\00\02\8E\07\00\E2\0F\08\80y\0A\0A\00\00\00\00\00\EB\10\00\00\A6\0E\00%v\08\09\00Z\00\00\00\02\8E\07\00\E2\0F\08\80y\04\04\00\00\00\00\00\EB\10\00\00\E6\0E\00%v\0C\0D\00Z\00\00\00\02\8E\07\00\E2\0F\00\80y\06\06\00\00\00\00\00\EB\10\00\00\E8\0E\00\80y\08\08\00\00\00\00\00\EB\10\00\00\A8\0E\00\80y\0C\0C\00\00\00\00\00\EB\10\00\00\22\0F\00\10x\03\03\01\00\00\00\FF\E0\FF\07\00\CA\0F\00%v\02\03\00f\00\00\00\02\8E\07\00\E2\0F\00)r\0E\04\00\00\00\00\06\00\00\00\00\C8\8F\00)r\10\08\00\00\00\00\0A\00\00\00\00\08N\00(x\12\0C\00\00\10\C0\00\00\00\00\00\C8\0F\01)r\0E\0E\00\00\00\00\10\00\00\00\00\10\1E\00)r\0E\0E\00\00\00\00\12\00\00\00\00\12\1E\00\85s\00\02\00\00\00\00\0E\EB\10\00\00\E2\1F\00My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18yp\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\98\03\00\00\00\00\00\00$\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00G\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\BC\03\00\00\00\00\00\00T\01\00\00\00\00\00\00\03\00\00\00\0B\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\E7\00\00\00\01\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\05\00\00\00\00\00\00\18\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\03\01\00\00\0B\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\05\00\00\00\00\00\00\E0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\C4\00\00\00\09\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\06\00\00\00\00\00\00\10\00\00\00\00\00\00\00\03\00\00\00\04\00\00\00\08\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00y\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\18\06\00\00\00\00\00\00\BC\01\00\00\00\00\00\00\00\00\00\00\0B\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\002\00\00\00\01\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\80\02\00\00\00\00\00\00\03\00\00\00\06\00\00\16\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"

declare i8* @malloc(i64)

declare void @free(i8*)

define void @laplace(double* %0, double* %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, double* %9, double* %10, i32 %11, i32 %12, i32 %13, i32 %14, i32 %15, i32 %16, i32 %17) !dbg !3 {
  %19 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } undef, double* %0, 0, !dbg !7
  %20 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %19, double* %1, 1, !dbg !9
  %21 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %20, i32 %2, 2, !dbg !10
  %22 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %21, i32 %3, 3, 0, !dbg !11
  %23 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %22, i32 %6, 4, 0, !dbg !12
  %24 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %23, i32 %4, 3, 1, !dbg !13
  %25 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %24, i32 %7, 4, 1, !dbg !14
  %26 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %25, i32 %5, 3, 2, !dbg !15
  %27 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %26, i32 %8, 4, 2, !dbg !16
  %28 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } undef, double* %9, 0, !dbg !17
  %29 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %28, double* %10, 1, !dbg !18
  %30 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %29, i32 %11, 2, !dbg !19
  %31 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %30, i32 %12, 3, 0, !dbg !20
  %32 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %31, i32 %15, 4, 0, !dbg !21
  %33 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %32, i32 %13, 3, 1, !dbg !22
  %34 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %33, i32 %16, 4, 1, !dbg !23
  %35 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %34, i32 %14, 3, 2, !dbg !24
  %36 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %35, i32 %17, 4, 2, !dbg !25
  %37 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %27, 0, !dbg !26
  %38 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } undef, double* %37, 0, !dbg !27
  %39 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %27, 1, !dbg !28
  %40 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %38, double* %39, 1, !dbg !29
  %41 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %27, 4, 0, !dbg !30
  %42 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %27, 4, 1, !dbg !31
  %43 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %27, 4, 2, !dbg !32
  %44 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %40, i32 20955, 2, !dbg !33
  %45 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %44, i32 66, 3, 2, !dbg !34
  %46 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %45, i32 1, 4, 2, !dbg !35
  %47 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %46, i32 66, 3, 1, !dbg !36
  %48 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %47, i32 72, 4, 1, !dbg !37
  %49 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %48, i32 64, 3, 0, !dbg !38
  %50 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %49, i32 5184, 4, 0, !dbg !39
  %51 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %36, 0, !dbg !40
  %52 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } undef, double* %51, 0, !dbg !41
  %53 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %36, 1, !dbg !42
  %54 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %52, double* %53, 1, !dbg !43
  %55 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %36, 4, 0, !dbg !44
  %56 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %36, 4, 1, !dbg !45
  %57 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %36, 4, 2, !dbg !46
  %58 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %54, i32 21028, 2, !dbg !47
  %59 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %58, i32 64, 3, 2, !dbg !48
  %60 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %59, i32 1, 4, 2, !dbg !49
  %61 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %60, i32 64, 3, 1, !dbg !50
  %62 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %61, i32 72, 4, 1, !dbg !51
  %63 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %62, i32 64, 3, 0, !dbg !52
  %64 = insertvalue { double*, double*, i32, [3 x i32], [3 x i32] } %63, i32 5184, 4, 0, !dbg !53
  %65 = call i8* @mgpuStreamCreate(), !dbg !54
  %66 = call i8* @mgpuModuleLoad(i8* getelementptr inbounds ([3456 x i8], [3456 x i8]* @laplace_kernel_gpubin_cst, i64 0, i64 0)), !dbg !55
  %67 = call i8* @mgpuModuleGetFunction(i8* %66, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @laplace_kernel_laplace_kernel_kernel_name, i64 0, i64 0)), !dbg !56
  %68 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %50, 0, !dbg !57
  %69 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %50, 1, !dbg !58
  %70 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %50, 2, !dbg !59
  %71 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %50, 3, 0, !dbg !60
  %72 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %50, 3, 1, !dbg !61
  %73 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %50, 3, 2, !dbg !62
  %74 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %50, 4, 0, !dbg !63
  %75 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %50, 4, 1, !dbg !64
  %76 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %50, 4, 2, !dbg !65
  %77 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %64, 0, !dbg !66
  %78 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %64, 1, !dbg !67
  %79 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %64, 2, !dbg !68
  %80 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %64, 3, 0, !dbg !69
  %81 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %64, 3, 1, !dbg !70
  %82 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %64, 3, 2, !dbg !71
  %83 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %64, 4, 0, !dbg !72
  %84 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %64, 4, 1, !dbg !73
  %85 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %64, 4, 2, !dbg !74
  %86 = alloca %0, align 8, !dbg !75
  %87 = alloca i8*, i32 18, align 8, !dbg !76
  %88 = getelementptr %0, %0* %86, i32 0, i32 0, !dbg !77
  store double* %68, double** %88, align 8, !dbg !78
  %89 = getelementptr i8*, i8** %87, i32 0, !dbg !79
  %90 = bitcast double** %88 to i8*, !dbg !80
  store i8* %90, i8** %89, align 8, !dbg !81
  %91 = getelementptr %0, %0* %86, i32 0, i32 1, !dbg !82
  store double* %69, double** %91, align 8, !dbg !83
  %92 = getelementptr i8*, i8** %87, i32 1, !dbg !84
  %93 = bitcast double** %91 to i8*, !dbg !85
  store i8* %93, i8** %92, align 8, !dbg !86
  %94 = getelementptr %0, %0* %86, i32 0, i32 2, !dbg !87
  store i32 %70, i32* %94, align 4, !dbg !88
  %95 = getelementptr i8*, i8** %87, i32 2, !dbg !89
  %96 = bitcast i32* %94 to i8*, !dbg !90
  store i8* %96, i8** %95, align 8, !dbg !91
  %97 = getelementptr %0, %0* %86, i32 0, i32 3, !dbg !92
  store i32 %71, i32* %97, align 4, !dbg !93
  %98 = getelementptr i8*, i8** %87, i32 3, !dbg !94
  %99 = bitcast i32* %97 to i8*, !dbg !95
  store i8* %99, i8** %98, align 8, !dbg !96
  %100 = getelementptr %0, %0* %86, i32 0, i32 4, !dbg !97
  store i32 %72, i32* %100, align 4, !dbg !98
  %101 = getelementptr i8*, i8** %87, i32 4, !dbg !99
  %102 = bitcast i32* %100 to i8*, !dbg !100
  store i8* %102, i8** %101, align 8, !dbg !101
  %103 = getelementptr %0, %0* %86, i32 0, i32 5, !dbg !102
  store i32 %73, i32* %103, align 4, !dbg !103
  %104 = getelementptr i8*, i8** %87, i32 5, !dbg !104
  %105 = bitcast i32* %103 to i8*, !dbg !105
  store i8* %105, i8** %104, align 8, !dbg !106
  %106 = getelementptr %0, %0* %86, i32 0, i32 6, !dbg !107
  store i32 %74, i32* %106, align 4, !dbg !108
  %107 = getelementptr i8*, i8** %87, i32 6, !dbg !109
  %108 = bitcast i32* %106 to i8*, !dbg !110
  store i8* %108, i8** %107, align 8, !dbg !111
  %109 = getelementptr %0, %0* %86, i32 0, i32 7, !dbg !112
  store i32 %75, i32* %109, align 4, !dbg !113
  %110 = getelementptr i8*, i8** %87, i32 7, !dbg !114
  %111 = bitcast i32* %109 to i8*, !dbg !115
  store i8* %111, i8** %110, align 8, !dbg !116
  %112 = getelementptr %0, %0* %86, i32 0, i32 8, !dbg !117
  store i32 %76, i32* %112, align 4, !dbg !118
  %113 = getelementptr i8*, i8** %87, i32 8, !dbg !119
  %114 = bitcast i32* %112 to i8*, !dbg !120
  store i8* %114, i8** %113, align 8, !dbg !121
  %115 = getelementptr %0, %0* %86, i32 0, i32 9, !dbg !122
  store double* %77, double** %115, align 8, !dbg !123
  %116 = getelementptr i8*, i8** %87, i32 9, !dbg !124
  %117 = bitcast double** %115 to i8*, !dbg !125
  store i8* %117, i8** %116, align 8, !dbg !126
  %118 = getelementptr %0, %0* %86, i32 0, i32 10, !dbg !127
  store double* %78, double** %118, align 8, !dbg !128
  %119 = getelementptr i8*, i8** %87, i32 10, !dbg !129
  %120 = bitcast double** %118 to i8*, !dbg !130
  store i8* %120, i8** %119, align 8, !dbg !131
  %121 = getelementptr %0, %0* %86, i32 0, i32 11, !dbg !132
  store i32 %79, i32* %121, align 4, !dbg !133
  %122 = getelementptr i8*, i8** %87, i32 11, !dbg !134
  %123 = bitcast i32* %121 to i8*, !dbg !135
  store i8* %123, i8** %122, align 8, !dbg !136
  %124 = getelementptr %0, %0* %86, i32 0, i32 12, !dbg !137
  store i32 %80, i32* %124, align 4, !dbg !138
  %125 = getelementptr i8*, i8** %87, i32 12, !dbg !139
  %126 = bitcast i32* %124 to i8*, !dbg !140
  store i8* %126, i8** %125, align 8, !dbg !141
  %127 = getelementptr %0, %0* %86, i32 0, i32 13, !dbg !142
  store i32 %81, i32* %127, align 4, !dbg !143
  %128 = getelementptr i8*, i8** %87, i32 13, !dbg !144
  %129 = bitcast i32* %127 to i8*, !dbg !145
  store i8* %129, i8** %128, align 8, !dbg !146
  %130 = getelementptr %0, %0* %86, i32 0, i32 14, !dbg !147
  store i32 %82, i32* %130, align 4, !dbg !148
  %131 = getelementptr i8*, i8** %87, i32 14, !dbg !149
  %132 = bitcast i32* %130 to i8*, !dbg !150
  store i8* %132, i8** %131, align 8, !dbg !151
  %133 = getelementptr %0, %0* %86, i32 0, i32 15, !dbg !152
  store i32 %83, i32* %133, align 4, !dbg !153
  %134 = getelementptr i8*, i8** %87, i32 15, !dbg !154
  %135 = bitcast i32* %133 to i8*, !dbg !155
  store i8* %135, i8** %134, align 8, !dbg !156
  %136 = getelementptr %0, %0* %86, i32 0, i32 16, !dbg !157
  store i32 %84, i32* %136, align 4, !dbg !158
  %137 = getelementptr i8*, i8** %87, i32 16, !dbg !159
  %138 = bitcast i32* %136 to i8*, !dbg !160
  store i8* %138, i8** %137, align 8, !dbg !161
  %139 = getelementptr %0, %0* %86, i32 0, i32 17, !dbg !162
  store i32 %85, i32* %139, align 4, !dbg !163
  %140 = getelementptr i8*, i8** %87, i32 17, !dbg !164
  %141 = bitcast i32* %139 to i8*, !dbg !165
  store i8* %141, i8** %140, align 8, !dbg !166
  call void @mgpuLaunchKernel(i8* %67, i64 64, i64 64, i64 1, i64 64, i64 1, i64 1, i32 0, i8* %65, i8** %87, i8** null), !dbg !167
  call void @mgpuModuleUnload(i8* %66), !dbg !168
  call void @mgpuStreamSynchronize(i8* %65), !dbg !169
  call void @mgpuStreamDestroy(i8* %65), !dbg !170
  ret void, !dbg !171
}

define void @_mlir_ciface_laplace({ double*, double*, i32, [3 x i32], [3 x i32] }* %0, { double*, double*, i32, [3 x i32], [3 x i32] }* %1) !dbg !172 {
  %3 = load { double*, double*, i32, [3 x i32], [3 x i32] }, { double*, double*, i32, [3 x i32], [3 x i32] }* %0, align 8, !dbg !173
  %4 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %3, 0, !dbg !175
  %5 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %3, 1, !dbg !176
  %6 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %3, 2, !dbg !177
  %7 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %3, 3, 0, !dbg !178
  %8 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %3, 3, 1, !dbg !179
  %9 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %3, 3, 2, !dbg !180
  %10 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %3, 4, 0, !dbg !181
  %11 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %3, 4, 1, !dbg !182
  %12 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %3, 4, 2, !dbg !183
  %13 = load { double*, double*, i32, [3 x i32], [3 x i32] }, { double*, double*, i32, [3 x i32], [3 x i32] }* %1, align 8, !dbg !184
  %14 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %13, 0, !dbg !185
  %15 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %13, 1, !dbg !186
  %16 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %13, 2, !dbg !187
  %17 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %13, 3, 0, !dbg !188
  %18 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %13, 3, 1, !dbg !189
  %19 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %13, 3, 2, !dbg !190
  %20 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %13, 4, 0, !dbg !191
  %21 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %13, 4, 1, !dbg !192
  %22 = extractvalue { double*, double*, i32, [3 x i32], [3 x i32] } %13, 4, 2, !dbg !193
  call void @laplace(double* %4, double* %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i32 %11, i32 %12, double* %14, double* %15, i32 %16, i32 %17, i32 %18, i32 %19, i32 %20, i32 %21, i32 %22), !dbg !194
  ret void, !dbg !195
}

declare i8* @mgpuStreamCreate()

declare i8* @mgpuModuleLoad(i8*)

declare i8* @mgpuModuleGetFunction(i8*, i8*)

declare void @mgpuLaunchKernel(i8*, i64, i64, i64, i64, i64, i64, i32, i8*, i8**, i8**)

declare void @mgpuModuleUnload(i8*)

declare void @mgpuStreamSynchronize(i8*)

declare void @mgpuStreamDestroy(i8*)

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "mlir", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!1 = !DIFile(filename: "LLVMDialectModule", directory: "/")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = distinct !DISubprogram(name: "laplace", linkageName: "laplace", scope: null, file: !4, line: 4, type: !5, scopeLine: 4, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6)
!4 = !DIFile(filename: "laplace_lowered.mlir", directory: "/root/new-open-earth/open-earth-compiler/test/test-open-earth")
!5 = !DISubroutineType(types: !6)
!6 = !{}
!7 = !DILocation(line: 6, column: 10, scope: !8)
!8 = !DILexicalBlockFile(scope: !3, file: !4, discriminator: 0)
!9 = !DILocation(line: 7, column: 10, scope: !8)
!10 = !DILocation(line: 8, column: 10, scope: !8)
!11 = !DILocation(line: 9, column: 10, scope: !8)
!12 = !DILocation(line: 10, column: 10, scope: !8)
!13 = !DILocation(line: 11, column: 10, scope: !8)
!14 = !DILocation(line: 12, column: 10, scope: !8)
!15 = !DILocation(line: 13, column: 10, scope: !8)
!16 = !DILocation(line: 14, column: 10, scope: !8)
!17 = !DILocation(line: 16, column: 11, scope: !8)
!18 = !DILocation(line: 17, column: 11, scope: !8)
!19 = !DILocation(line: 18, column: 11, scope: !8)
!20 = !DILocation(line: 19, column: 11, scope: !8)
!21 = !DILocation(line: 20, column: 11, scope: !8)
!22 = !DILocation(line: 21, column: 11, scope: !8)
!23 = !DILocation(line: 22, column: 11, scope: !8)
!24 = !DILocation(line: 23, column: 11, scope: !8)
!25 = !DILocation(line: 24, column: 11, scope: !8)
!26 = !DILocation(line: 29, column: 11, scope: !8)
!27 = !DILocation(line: 31, column: 11, scope: !8)
!28 = !DILocation(line: 32, column: 11, scope: !8)
!29 = !DILocation(line: 34, column: 11, scope: !8)
!30 = !DILocation(line: 35, column: 11, scope: !8)
!31 = !DILocation(line: 36, column: 11, scope: !8)
!32 = !DILocation(line: 37, column: 11, scope: !8)
!33 = !DILocation(line: 39, column: 11, scope: !8)
!34 = !DILocation(line: 42, column: 11, scope: !8)
!35 = !DILocation(line: 43, column: 11, scope: !8)
!36 = !DILocation(line: 46, column: 11, scope: !8)
!37 = !DILocation(line: 47, column: 11, scope: !8)
!38 = !DILocation(line: 50, column: 11, scope: !8)
!39 = !DILocation(line: 51, column: 11, scope: !8)
!40 = !DILocation(line: 53, column: 11, scope: !8)
!41 = !DILocation(line: 55, column: 11, scope: !8)
!42 = !DILocation(line: 56, column: 11, scope: !8)
!43 = !DILocation(line: 58, column: 11, scope: !8)
!44 = !DILocation(line: 59, column: 11, scope: !8)
!45 = !DILocation(line: 60, column: 11, scope: !8)
!46 = !DILocation(line: 61, column: 11, scope: !8)
!47 = !DILocation(line: 63, column: 11, scope: !8)
!48 = !DILocation(line: 66, column: 11, scope: !8)
!49 = !DILocation(line: 67, column: 11, scope: !8)
!50 = !DILocation(line: 70, column: 11, scope: !8)
!51 = !DILocation(line: 71, column: 11, scope: !8)
!52 = !DILocation(line: 74, column: 11, scope: !8)
!53 = !DILocation(line: 75, column: 11, scope: !8)
!54 = !DILocation(line: 76, column: 11, scope: !8)
!55 = !DILocation(line: 80, column: 11, scope: !8)
!56 = !DILocation(line: 84, column: 11, scope: !8)
!57 = !DILocation(line: 86, column: 11, scope: !8)
!58 = !DILocation(line: 87, column: 11, scope: !8)
!59 = !DILocation(line: 88, column: 11, scope: !8)
!60 = !DILocation(line: 89, column: 11, scope: !8)
!61 = !DILocation(line: 90, column: 11, scope: !8)
!62 = !DILocation(line: 91, column: 11, scope: !8)
!63 = !DILocation(line: 92, column: 11, scope: !8)
!64 = !DILocation(line: 93, column: 11, scope: !8)
!65 = !DILocation(line: 94, column: 11, scope: !8)
!66 = !DILocation(line: 95, column: 11, scope: !8)
!67 = !DILocation(line: 96, column: 11, scope: !8)
!68 = !DILocation(line: 97, column: 11, scope: !8)
!69 = !DILocation(line: 98, column: 11, scope: !8)
!70 = !DILocation(line: 99, column: 11, scope: !8)
!71 = !DILocation(line: 100, column: 11, scope: !8)
!72 = !DILocation(line: 101, column: 11, scope: !8)
!73 = !DILocation(line: 102, column: 11, scope: !8)
!74 = !DILocation(line: 103, column: 11, scope: !8)
!75 = !DILocation(line: 105, column: 12, scope: !8)
!76 = !DILocation(line: 107, column: 12, scope: !8)
!77 = !DILocation(line: 110, column: 12, scope: !8)
!78 = !DILocation(line: 111, column: 5, scope: !8)
!79 = !DILocation(line: 112, column: 12, scope: !8)
!80 = !DILocation(line: 113, column: 12, scope: !8)
!81 = !DILocation(line: 114, column: 5, scope: !8)
!82 = !DILocation(line: 116, column: 12, scope: !8)
!83 = !DILocation(line: 117, column: 5, scope: !8)
!84 = !DILocation(line: 118, column: 12, scope: !8)
!85 = !DILocation(line: 119, column: 12, scope: !8)
!86 = !DILocation(line: 120, column: 5, scope: !8)
!87 = !DILocation(line: 122, column: 12, scope: !8)
!88 = !DILocation(line: 123, column: 5, scope: !8)
!89 = !DILocation(line: 124, column: 12, scope: !8)
!90 = !DILocation(line: 125, column: 12, scope: !8)
!91 = !DILocation(line: 126, column: 5, scope: !8)
!92 = !DILocation(line: 128, column: 12, scope: !8)
!93 = !DILocation(line: 129, column: 5, scope: !8)
!94 = !DILocation(line: 130, column: 12, scope: !8)
!95 = !DILocation(line: 131, column: 12, scope: !8)
!96 = !DILocation(line: 132, column: 5, scope: !8)
!97 = !DILocation(line: 134, column: 12, scope: !8)
!98 = !DILocation(line: 135, column: 5, scope: !8)
!99 = !DILocation(line: 136, column: 12, scope: !8)
!100 = !DILocation(line: 137, column: 12, scope: !8)
!101 = !DILocation(line: 138, column: 5, scope: !8)
!102 = !DILocation(line: 140, column: 12, scope: !8)
!103 = !DILocation(line: 141, column: 5, scope: !8)
!104 = !DILocation(line: 142, column: 12, scope: !8)
!105 = !DILocation(line: 143, column: 12, scope: !8)
!106 = !DILocation(line: 144, column: 5, scope: !8)
!107 = !DILocation(line: 146, column: 12, scope: !8)
!108 = !DILocation(line: 147, column: 5, scope: !8)
!109 = !DILocation(line: 148, column: 12, scope: !8)
!110 = !DILocation(line: 149, column: 12, scope: !8)
!111 = !DILocation(line: 150, column: 5, scope: !8)
!112 = !DILocation(line: 152, column: 12, scope: !8)
!113 = !DILocation(line: 153, column: 5, scope: !8)
!114 = !DILocation(line: 154, column: 12, scope: !8)
!115 = !DILocation(line: 155, column: 12, scope: !8)
!116 = !DILocation(line: 156, column: 5, scope: !8)
!117 = !DILocation(line: 158, column: 12, scope: !8)
!118 = !DILocation(line: 159, column: 5, scope: !8)
!119 = !DILocation(line: 160, column: 12, scope: !8)
!120 = !DILocation(line: 161, column: 12, scope: !8)
!121 = !DILocation(line: 162, column: 5, scope: !8)
!122 = !DILocation(line: 164, column: 12, scope: !8)
!123 = !DILocation(line: 165, column: 5, scope: !8)
!124 = !DILocation(line: 166, column: 12, scope: !8)
!125 = !DILocation(line: 167, column: 12, scope: !8)
!126 = !DILocation(line: 168, column: 5, scope: !8)
!127 = !DILocation(line: 170, column: 12, scope: !8)
!128 = !DILocation(line: 171, column: 5, scope: !8)
!129 = !DILocation(line: 172, column: 12, scope: !8)
!130 = !DILocation(line: 173, column: 12, scope: !8)
!131 = !DILocation(line: 174, column: 5, scope: !8)
!132 = !DILocation(line: 176, column: 12, scope: !8)
!133 = !DILocation(line: 177, column: 5, scope: !8)
!134 = !DILocation(line: 178, column: 12, scope: !8)
!135 = !DILocation(line: 179, column: 12, scope: !8)
!136 = !DILocation(line: 180, column: 5, scope: !8)
!137 = !DILocation(line: 182, column: 12, scope: !8)
!138 = !DILocation(line: 183, column: 5, scope: !8)
!139 = !DILocation(line: 184, column: 12, scope: !8)
!140 = !DILocation(line: 185, column: 12, scope: !8)
!141 = !DILocation(line: 186, column: 5, scope: !8)
!142 = !DILocation(line: 188, column: 12, scope: !8)
!143 = !DILocation(line: 189, column: 5, scope: !8)
!144 = !DILocation(line: 190, column: 12, scope: !8)
!145 = !DILocation(line: 191, column: 12, scope: !8)
!146 = !DILocation(line: 192, column: 5, scope: !8)
!147 = !DILocation(line: 194, column: 12, scope: !8)
!148 = !DILocation(line: 195, column: 5, scope: !8)
!149 = !DILocation(line: 196, column: 12, scope: !8)
!150 = !DILocation(line: 197, column: 12, scope: !8)
!151 = !DILocation(line: 198, column: 5, scope: !8)
!152 = !DILocation(line: 200, column: 12, scope: !8)
!153 = !DILocation(line: 201, column: 5, scope: !8)
!154 = !DILocation(line: 202, column: 12, scope: !8)
!155 = !DILocation(line: 203, column: 12, scope: !8)
!156 = !DILocation(line: 204, column: 5, scope: !8)
!157 = !DILocation(line: 206, column: 12, scope: !8)
!158 = !DILocation(line: 207, column: 5, scope: !8)
!159 = !DILocation(line: 208, column: 12, scope: !8)
!160 = !DILocation(line: 209, column: 12, scope: !8)
!161 = !DILocation(line: 210, column: 5, scope: !8)
!162 = !DILocation(line: 212, column: 12, scope: !8)
!163 = !DILocation(line: 213, column: 5, scope: !8)
!164 = !DILocation(line: 214, column: 12, scope: !8)
!165 = !DILocation(line: 215, column: 12, scope: !8)
!166 = !DILocation(line: 216, column: 5, scope: !8)
!167 = !DILocation(line: 224, column: 12, scope: !8)
!168 = !DILocation(line: 225, column: 12, scope: !8)
!169 = !DILocation(line: 226, column: 12, scope: !8)
!170 = !DILocation(line: 227, column: 12, scope: !8)
!171 = !DILocation(line: 228, column: 5, scope: !8)
!172 = distinct !DISubprogram(name: "_mlir_ciface_laplace", linkageName: "_mlir_ciface_laplace", scope: null, file: !4, line: 230, type: !5, scopeLine: 230, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !6)
!173 = !DILocation(line: 231, column: 10, scope: !174)
!174 = !DILexicalBlockFile(scope: !172, file: !4, discriminator: 0)
!175 = !DILocation(line: 232, column: 10, scope: !174)
!176 = !DILocation(line: 233, column: 10, scope: !174)
!177 = !DILocation(line: 234, column: 10, scope: !174)
!178 = !DILocation(line: 235, column: 10, scope: !174)
!179 = !DILocation(line: 236, column: 10, scope: !174)
!180 = !DILocation(line: 237, column: 10, scope: !174)
!181 = !DILocation(line: 238, column: 10, scope: !174)
!182 = !DILocation(line: 239, column: 10, scope: !174)
!183 = !DILocation(line: 240, column: 10, scope: !174)
!184 = !DILocation(line: 241, column: 11, scope: !174)
!185 = !DILocation(line: 242, column: 11, scope: !174)
!186 = !DILocation(line: 243, column: 11, scope: !174)
!187 = !DILocation(line: 244, column: 11, scope: !174)
!188 = !DILocation(line: 245, column: 11, scope: !174)
!189 = !DILocation(line: 246, column: 11, scope: !174)
!190 = !DILocation(line: 247, column: 11, scope: !174)
!191 = !DILocation(line: 248, column: 11, scope: !174)
!192 = !DILocation(line: 249, column: 11, scope: !174)
!193 = !DILocation(line: 250, column: 11, scope: !174)
!194 = !DILocation(line: 251, column: 5, scope: !174)
!195 = !DILocation(line: 252, column: 5, scope: !174)
